/// <summary>
/// Returns a absolute path to the file
/// </summary>
public string BackgroundImgPathFull
{
    get
    {
        return AppDataFileHelper.GetPathFromAppData(ImageSavePath);
    }
}

/// <summary>
/// Returns a new <see cref="ImageSource"/> stream of the image
/// </summary>
public ImageSource ImgStream
{
    get
    {
        return ImageSource.FromStream(() => File.OpenRead(BackgroundImgPathFull));
    }
}

/// <summary>
/// Saves the image to the predefined path
/// </summary>
/// <param name="paths"></param>
/// <returns></returns>
public virtual async Task SaveImageAsync(DrawableImagePaths paths)
{
    if (!File.Exists(paths.ImagePath))
    {
        return;
    }

    if (paths.ImagePath != BackgroundImgPathFull)
    {
        using (FileStream stream = File.OpenRead(paths.ImagePath))
        {
            Directory.CreateDirectory(Path.GetDirectoryName(BackgroundImgPathFull));
            using (FileStream localFileStream = File.OpenWrite(BackgroundImgPathFull))
            {
                using Microsoft.Maui.Graphics.IImage img = Microsoft.Maui.Graphics.Platform.PlatformImage.FromStream(stream);
                await img.SaveAsync(localFileStream, ImageFormat.Png);
            }
        }
    }

    if (!File.Exists(paths.OverDrawPath))
    {
        return;
    }

    using (FileStream stream = File.OpenRead(paths.OverDrawPath))
    {
        string overdrawImgPath = BackgroundImgPathFull.Insert(BackgroundImgPathFull.Length - 4, DrawableImagePaths.OverDrawPostFix);
        using (FileStream localFileStream = File.OpenWrite(overdrawImgPath))
        {
            using Microsoft.Maui.Graphics.IImage img = Microsoft.Maui.Graphics.Platform.PlatformImage.FromStream(stream);
            await img.SaveAsync(localFileStream, ImageFormat.Png);
        }
    }
}

/// <summary>
/// Deletes the image if it exists
/// </summary>
public void DeleteImage()
{
    if (!File.Exists(BackgroundImgPathFull))
    {
        return;
    }

    File.Delete(BackgroundImgPathFull);
}